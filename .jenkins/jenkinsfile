pipeline {
  agent any
  environment {
    ECR_REPOSITORY = credentials('ECR_REPOSITORY')
    AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')
    AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    VENV_PATH = '/home/ubuntu/awscli-venv/bin/python'
  }

  stages {
    stage('Continous Integration') {
      steps {
        script {
          echo "Linting repository"
          echo "Running unit tests"
        }
      }
    }

    stage('Login to ECR') {
      steps {
        script {
          sh "${VENV_PATH} -m venv /home/ubuntu/awscli-venv"
          sh "source /home/ubuntu/awscli-venv/bin/activate"
          sh "/home/ubuntu/awscli-venv/bin/aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}"
          sh "deactivate"
        }

      }
    }
    
    stage('Build Image') {
      steps {
        script {
          sh 'docker build -t ${ECR_REPOSITORY}:latest .'
        }

      }
    }

    stage('Push Image') {
      steps {
        script {
          sh 'docker push ${ECR_REPOSITORY}:latest'
        }

      }
    }

    stage('Continous Deployment') {
      steps {
        sshagent(['ssh_key']) {
          sh "ssh -o StrictHostKeyChecking=no -l ubuntu 13.235.235.214 'cd /home/ubuntu/ && wget https://github.com/Chetand777/End-to-End-Object-Detection/raw/main/docker-compose.yml && export IMAGE_NAME=${ECR_REPOSITORY}:latest && source /home/ubuntu/awscli-venv/bin/activate && /home/ubuntu/awscli-venv/bin/aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com && docker compose up -d && deactivate'"
        }
      }
    }
  }

  post {
    always {
      sh 'docker system prune -f'
    }
  }
}
